@using myBlazorApp.Models
@inject IJSRuntime JSRuntime
@using System.Text.Json
@inject SessionService Session

<div class="close-container">
    <div class="material-symbols-outlined close-button" @onclick="HandleCloseClick">close</div>
</div>
<h2 class="searchtext">searching @Session.SearchQuery.</h2>
<div class="post-container results">
    @if (@Session.SearchedPosts != null && @Session.SearchedPosts.Any())
    {
        @for (int i = 0; i < @Session.SearchedPosts.Count; i++)
        {
            var post = @Session.SearchedPosts[i];
            <div class="post-box">
                <div class="name-date">
                    <h3 class="author">@post.Author</h3>
                    <p class="timestamp">@post.Timestamp.ToString("dd/MM HH:mm")</p>
                </div>
                <p class="content">@post.Content</p>
                <p class="see-more" @onclick="() => HandlePostClick(post)">see more.</p>
            </div>
        }
    }
    else
    {
        <p class="loading results">Loading posts...</p>
    }
</div>

@code {

    [Parameter] public EventCallback returnToMenu { get; set; }
    [Parameter] public Action<Post>? OpenPost { get; set; }
    [Parameter] public Action<PopupType>? OpenPopup { get; set; }

    private void HandlePostClick(Post post)
    {
        OpenPopup?.Invoke(PopupType.PostDetails);
        OpenPost?.Invoke(post);
        Console.WriteLine(post);
    }
    private void HandleCloseClick()
    {
        Session.SearchQuery = "";
        OpenPopup?.Invoke(PopupType.SearchPosts);
    }
}